/**
 * Script de suppression des utilisateurs Auth
 *
 * ATTENTION : N√©cessite la SUPABASE_SERVICE_ROLE_KEY
 *
 * Ce script supprime TOUS les utilisateurs de auth.users
 *
 * Usage: node scripts/delete-auth-users.mjs
 */

import { createClient } from '@supabase/supabase-js'
import * as dotenv from 'dotenv'
import { fileURLToPath } from 'url'
import { dirname, join } from 'path'

// Charger les variables d'environnement
const __filename = fileURLToPath(import.meta.url)
const __dirname = dirname(__filename)
dotenv.config({ path: join(__dirname, '..', '.env.local') })

const supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL
const serviceRoleKey = process.env.SUPABASE_SERVICE_ROLE_KEY

if (!supabaseUrl || !serviceRoleKey) {
  console.error('‚ùå Variables d\'environnement manquantes')
  console.error('NEXT_PUBLIC_SUPABASE_URL:', supabaseUrl ? '‚úÖ' : '‚ùå')
  console.error('SUPABASE_SERVICE_ROLE_KEY:', serviceRoleKey ? '‚úÖ' : '‚ùå')
  process.exit(1)
}

// Client avec service_role pour acc√©der √† auth.users
const supabaseAdmin = createClient(supabaseUrl, serviceRoleKey, {
  auth: {
    autoRefreshToken: false,
    persistSession: false
  }
})

async function deleteAllAuthUsers() {
  console.log('\nüóëÔ∏è  SUPPRESSION DES UTILISATEURS AUTH\n')
  console.log('‚ö†Ô∏è  ATTENTION : Cette op√©ration est IRR√âVERSIBLE !\n')

  try {
    // 1. Lister tous les utilisateurs Auth
    console.log('[1/2] üìã R√©cup√©ration de tous les utilisateurs Auth...')
    const { data: { users }, error: listError } = await supabaseAdmin.auth.admin.listUsers()

    if (listError) {
      throw new Error(`Erreur lors de la r√©cup√©ration des utilisateurs: ${listError.message}`)
    }

    if (!users || users.length === 0) {
      console.log('‚úÖ Aucun utilisateur Auth √† supprimer.')
      return
    }

    console.log(`   Trouv√© ${users.length} utilisateur(s) :`)
    users.forEach((user, index) => {
      console.log(`   ${index + 1}. ${user.email} (id: ${user.id})`)
    })

    // 2. Supprimer tous les utilisateurs
    console.log('\n[2/2] üóÑÔ∏è  Suppression de tous les utilisateurs Auth...')
    let successCount = 0
    let errorCount = 0

    for (const user of users) {
      const { error } = await supabaseAdmin.auth.admin.deleteUser(user.id)

      if (error) {
        console.log(`   ‚ùå Erreur pour ${user.email}:`, error.message)
        errorCount++
      } else {
        console.log(`   ‚úÖ ${user.email} supprim√©`)
        successCount++
      }
    }

    console.log(`\n‚úÖ SUPPRESSION TERMIN√âE !`)
    console.log(`   Succ√®s: ${successCount}`)
    console.log(`   Erreurs: ${errorCount}\n`)

  } catch (error) {
    console.error('\n‚ùå ERREUR :', error.message)
    process.exit(1)
  }
}

// Ex√©cuter
deleteAllAuthUsers()
